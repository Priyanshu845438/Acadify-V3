Excellent. This is a fantastic ideaâ€”repurposing that clean, professional "team" layout for your case studies is visually strong and efficient. The added functionality of a modal popup is the perfect way to present detailed information without cluttering the page.

Here is the complete guide to building this exact component, from the visual prompt to the functional code.

1. The AI UI Generation Prompt

This prompt will generate a high-fidelity visual for your developer, translating the team layout into a case study showcase.

"UI design for a 'Case Studies' or 'Our Work' section for a professional IT company.

Header Area:

A large, center-aligned headline: 'Our Proven Success Stories'. The word 'Success' is highlighted in the primary blue color (#0D6EFD).

A short, descriptive paragraph below the headline.

A set of filter tabs (like Bootstrap nav-tabs) centered below the paragraph. Tabs should be for service categories: 'All', 'Web Development', 'App Development', 'Brand Building'. The active tab has a blue text color and a blue underline.

Case Study Grid:

A 4-column grid of case study cards.

Card Style:

A clean, light gray card (#F8F9FA) with prominent rounded corners and a subtle hover effect (lift and shadow).

The entire card is a clickable element.

Top half: A project image, displayed in black and white. On hover, the image should transition to full color.

Bottom half: A white background area with centered text:

The client's name in bold, dark charcoal text (e.g., 'Innovate Ltd.').

The project type or service provided in a smaller, primary blue text (e.g., 'E-commerce Platform').

Modal Popup (on click):

A large, clean Bootstrap-style modal appears.

Modal Header: The client's name and a close 'X' button.

Modal Body:

A large, full-color project image at the top.

A 'Challenge' section with a bold heading and paragraph.

A 'Solution' section with a bold heading and paragraph.

A 'Results' section with bullet points or icons highlighting key metrics (e.g., '+200% Traffic', '+150% Conversions').

The overall design is clean, professional, and interactive."

2. The Developer's Blueprint (HTML & Bootstrap Structure)

This code uses Bootstrap 5's grid, cards, and modal components. The key is using data-bs-* attributes to trigger and populate the modal.

code
Html
download
content_copy
expand_less

<!-- CASE STUDIES SECTION -->
<section class="py-5">
  <div class="container">

    <!-- Section Header -->
    <div class="text-center mb-5">
      <h2 class="display-5 fw-bold">Our Proven <span class="text-primary">Success</span> Stories</h2>
      <p class="lead text-muted">See how we've helped businesses like yours achieve their goals.</p>
    </div>

    <!-- Filter Tabs (Optional but Recommended) -->
    <ul class="nav nav-tabs justify-content-center border-0 mb-4" id="caseStudyTabs" role="tablist">
      <li class="nav-item" role="presentation">
        <button class="nav-link active" id="all-tab" data-bs-toggle="tab" data-bs-target="#all-pane" type="button" role="tab">All</button>
      </li>
      <li class="nav-item" role="presentation">
        <button class="nav-link" id="web-tab" data-bs-toggle="tab" data-bs-target="#web-pane" type="button" role="tab">Web Development</button>
      </li>
      <li class="nav-item" role="presentation">
        <button class="nav-link" id="app-tab" data-bs-toggle="tab" data-bs-target="#app-pane" type="button" role="tab">App Development</button>
      </li>
    </ul>

    <!-- Tab Content -->
    <div class="tab-content" id="caseStudyTabsContent">
      <div class="tab-pane fade show active" id="all-pane" role="tabpanel">
        <div class="row g-4">
          <!-- All Case Studies will be dynamically inserted here or hardcoded -->
          <!-- Example Card -->
          <div class="col-lg-3 col-md-6">
            <a href="#" class="case-study-card" 
               data-bs-toggle="modal" 
               data-bs-target="#caseStudyModal"
               data-title="Innovate Ltd."
               data-image="path/to/innovate-color.jpg"
               data-category="E-commerce Platform"
               data-challenge="Their legacy e-commerce site was slow, outdated, and not mobile-friendly, leading to high bounce rates."
               data-solution="We designed and developed a new, high-performance Shopify Plus store with a custom theme, streamlined checkout process, and integrated inventory management."
               data-results="+200% increase in mobile conversions; -45% page load time; +30% average order value.">
              
              <div class="card border-0 shadow-sm rounded-4 text-center h-100">
                <img src="path/to/innovate-bw.jpg" class="card-img-top rounded-top-4" alt="Innovate Ltd Project">
                <div class="card-body">
                  <h5 class="card-title fw-bold mb-1">Innovate Ltd.</h5>
                  <p class="card-text text-primary">E-commerce Platform</p>
                </div>
              </div>
            </a>
          </div>
          <!-- Add more cards here -->
        </div>
      </div>
      <!-- Add other tab-panes for web, app, etc. -->
    </div>
  </div>
</section>

<!-- THE MODAL (Only one instance is needed) -->
<div class="modal fade" id="caseStudyModal" tabindex="-1" aria-labelledby="caseStudyModalLabel" aria-hidden="true">
  <div class="modal-dialog modal-lg modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="caseStudyModalLabel">Case Study Title</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body">
        <img id="modal-image" src="" class="img-fluid rounded-3 mb-4" alt="Case Study Image">
        
        <h4 class="fw-bold">Challenge</h4>
        <p id="modal-challenge"></p>
        
        <h4 class="fw-bold mt-4">Solution</h4>
        <p id="modal-solution"></p>
        
        <h4 class="fw-bold mt-4">Results</h4>
        <p id="modal-results"></p>
      </div>
    </div>
  </div>
</div>
3. Custom CSS & JavaScript for Functionality

This is the magic that makes it all work: the hover effect and the dynamic modal population.

CSS (Add to your stylesheet):

code
CSS
download
content_copy
expand_less
IGNORE_WHEN_COPYING_START
IGNORE_WHEN_COPYING_END
.case-study-card {
  text-decoration: none;
  color: inherit;
  display: block;
}

.case-study-card .card {
  transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.case-study-card:hover .card {
  transform: translateY(-10px);
  box-shadow: 0 0.8rem 1.5rem rgba(0, 0, 0, 0.1) !important;
}

.case-study-card .card-img-top {
  filter: grayscale(100%);
  transition: filter 0.3s ease;
}

.case-study-card:hover .card-img-top {
  filter: grayscale(0%);
}

JavaScript (Add before your closing </body> tag):
This script listens for when the modal is about to open, grabs the data from the clicked card, and injects it into the modal before it's displayed.

code
JavaScript
download
content_copy
expand_less
IGNORE_WHEN_COPYING_START
IGNORE_WHEN_COPYING_END
const caseStudyModal = document.getElementById('caseStudyModal');

caseStudyModal.addEventListener('show.bs.modal', function (event) {
  // Button that triggered the modal
  const button = event.relatedTarget;

  // Extract info from data-bs-* attributes
  const title = button.getAttribute('data-title');
  const image = button.getAttribute('data-image');
  const category = button.getAttribute('data-category');
  const challenge = button.getAttribute('data-challenge');
  const solution = button.getAttribute('data-solution');
  const results = button.getAttribute('data-results');

  // Update the modal's content
  const modalTitle = caseStudyModal.querySelector('.modal-title');
  const modalImage = caseStudyModal.querySelector('#modal-image');
  const modalChallenge = caseStudyModal.querySelector('#modal-challenge');
  const modalSolution = caseStudyModal.querySelector('#modal-solution');
  const modalResults = caseStudyModal.querySelector('#modal-results');

  modalTitle.textContent = title + " - " + category;
  modalImage.src = image;
  modalChallenge.textContent = challenge;
  modalSolution.textContent = solution;
  modalResults.textContent = results;
});
4. Mobile Responsive Instructions

The Bootstrap grid handles this beautifully:

Desktop (lg): A 4-column layout (col-lg-3).

Tablet (md): A 2-column layout (col-md-6).

Mobile (default): A 1-column layout, with cards stacking vertically for easy scrolling and tapping.

Modal: Bootstrap's modal is inherently responsive and will adapt to any screen size.